{"ast":null,"code":"const addToDb = item => {\n  const db = getDb();\n\n  if (item in db) {\n    db[item] = db[item] + 1;\n  } else {\n    db[item] = 1;\n  }\n\n  saveToDb(db);\n};\n\nconst removeFromDb = item => {\n  const db = getDb();\n  delete db[item];\n  saveToDb(db);\n};\n\nconst saveToDb = db => {\n  const dbJSON = JSON.stringify(db);\n  localStorage.setItem('shopping-cart', dbJSON);\n};\n\nconst getDb = () => {\n  let savedDb = localStorage.getItem('shopping-cart');\n  return savedDb ? JSON.parse(savedDb) : {};\n};\n\nexport { addToDb, removeFromDb, getDb };","map":{"version":3,"sources":["/home/yuko-2/Desktop/Jhankar projects/react-meal-db1/src/localstorage/localstorage.js"],"names":["addToDb","item","db","getDb","saveToDb","removeFromDb","dbJSON","JSON","stringify","localStorage","setItem","savedDb","getItem","parse"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAMC,EAAE,GAAGC,KAAK,EAAhB;;AACA,MAAIF,IAAI,IAAIC,EAAZ,EAAgB;AACZA,IAAAA,EAAE,CAACD,IAAD,CAAF,GAAWC,EAAE,CAACD,IAAD,CAAF,GAAW,CAAtB;AACH,GAFD,MAGK;AACDC,IAAAA,EAAE,CAACD,IAAD,CAAF,GAAW,CAAX;AACH;;AACDG,EAAAA,QAAQ,CAACF,EAAD,CAAR;AACH,CATD;;AAWA,MAAMG,YAAY,GAAGJ,IAAI,IAAI;AACzB,QAAMC,EAAE,GAAGC,KAAK,EAAhB;AACA,SAAOD,EAAE,CAACD,IAAD,CAAT;AACAG,EAAAA,QAAQ,CAACF,EAAD,CAAR;AACH,CAJD;;AAMA,MAAME,QAAQ,GAAGF,EAAE,IAAI;AACnB,QAAMI,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeN,EAAf,CAAf;AACAO,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCJ,MAAtC;AACH,CAHD;;AAKA,MAAMH,KAAK,GAAG,MAAM;AAChB,MAAIQ,OAAO,GAAGF,YAAY,CAACG,OAAb,CAAqB,eAArB,CAAd;AACA,SAAOD,OAAO,GAAGJ,IAAI,CAACM,KAAL,CAAWF,OAAX,CAAH,GAAyB,EAAvC;AACH,CAHD;;AAKA,SAASX,OAAT,EAAkBK,YAAlB,EAAgCF,KAAhC","sourcesContent":["const addToDb = item => {\r\n    const db = getDb();\r\n    if (item in db) {\r\n        db[item] = db[item] + 1;\r\n    }\r\n    else {\r\n        db[item] = 1;\r\n    }\r\n    saveToDb(db);\r\n}\r\n\r\nconst removeFromDb = item => {\r\n    const db = getDb();\r\n    delete db[item];\r\n    saveToDb(db);\r\n}\r\n\r\nconst saveToDb = db => {\r\n    const dbJSON = JSON.stringify(db);\r\n    localStorage.setItem('shopping-cart', dbJSON);\r\n}\r\n\r\nconst getDb = () => {\r\n    let savedDb = localStorage.getItem('shopping-cart');\r\n    return savedDb ? JSON.parse(savedDb) : {};\r\n}\r\n\r\nexport { addToDb, removeFromDb, getDb };"]},"metadata":{},"sourceType":"module"}