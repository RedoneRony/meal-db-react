{"ast":null,"code":"var _jsxFileName = \"/home/yuko-2/Desktop/Jhankar projects/react-meal-db1/src/components/Restaurant/Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addToDb, getDb } from '../../localstorage/localstorage';\nimport Meal from '../Meal/Meal';\nimport OrderList from '../OrderList/OrderList';\nimport './Restaurant.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Restaurant = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [order, setOrder] = useState([]);\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=fish').then(res => res.json()).then(data => setMeals(data.meals));\n  }, []);\n  /* \r\n      The above api link or the below method will now work for search. \r\n      if you want to implement search in this code. \r\n      1. add a input field \r\n      2. declare a state to keep search field text\r\n      3. Make meal loading api to dependant on search text\r\n      4. change the meal loading api.you will get the right api link on their website.\r\n      5. make the meal loading api dynamic using template string. \r\n      6. Also, the useEffect below will not work. Because, search result might not include the meals previously added to the cart\r\n      7. in that case, for each mealId, you have to load the meal from the api (you will find a new pai to load meal by Id) and then add them to the order state.\r\n      ---------------  \r\n      Read carefully, give it a try. [ Ki ache jibone]\r\n      if  you need help, let us know in the support session\r\n  */\n\n  useEffect(() => {\n    if (meals.length) {\n      const savedDb = getDb();\n      const savedOrder = [];\n\n      for (const mealId in savedDb) {\n        const meal = meals.find(ml => ml.idMeal === mealId);\n        const quantity = savedDb[mealId];\n        meal.quantity = quantity;\n        savedOrder.push(meal);\n      }\n\n      setOrder(savedOrder);\n    }\n  }, [meals]);\n\n  const handleAddToOrder = meal => {\n    meal.quantity = 1;\n    const newOrder = [...order, meal];\n    setOrder(newOrder);\n    addToDb(meal.idMeal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meals-container\",\n      children: meals.map(meal => /*#__PURE__*/_jsxDEV(Meal, {\n        meal: meal,\n        handleAddToOrder: handleAddToOrder\n      }, meal.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list\",\n      children: /*#__PURE__*/_jsxDEV(OrderList, {\n        order: order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Restaurant, \"yxhhZOFhms6EEllvnOSdOqmjrgI=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/home/yuko-2/Desktop/Jhankar projects/react-meal-db1/src/components/Restaurant/Restaurant.js"],"names":["React","useEffect","useState","addToDb","getDb","Meal","OrderList","Restaurant","meals","setMeals","order","setOrder","fetch","then","res","json","data","length","savedDb","savedOrder","mealId","meal","find","ml","idMeal","quantity","push","handleAddToOrder","newOrder","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,iCAA/B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAAC,2DAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACR,KAAN,CAF1B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACIP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,KAAK,CAACS,MAAV,EAAkB;AACd,YAAMC,OAAO,GAAGd,KAAK,EAArB;AACA,YAAMe,UAAU,GAAG,EAAnB;;AACA,WAAK,MAAMC,MAAX,IAAqBF,OAArB,EAA8B;AAC1B,cAAMG,IAAI,GAAGb,KAAK,CAACc,IAAN,CAAWC,EAAE,IAAIA,EAAE,CAACC,MAAH,KAAcJ,MAA/B,CAAb;AACA,cAAMK,QAAQ,GAAGP,OAAO,CAACE,MAAD,CAAxB;AACAC,QAAAA,IAAI,CAACI,QAAL,GAAgBA,QAAhB;AACAN,QAAAA,UAAU,CAACO,IAAX,CAAgBL,IAAhB;AACH;;AACDV,MAAAA,QAAQ,CAACQ,UAAD,CAAR;AACH;AACJ,GAZQ,EAYN,CAACX,KAAD,CAZM,CAAT;;AAcA,QAAMmB,gBAAgB,GAAGN,IAAI,IAAI;AAC7BA,IAAAA,IAAI,CAACI,QAAL,GAAgB,CAAhB;AACA,UAAMG,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,EAAWW,IAAX,CAAjB;AACAV,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACAzB,IAAAA,OAAO,CAACkB,IAAI,CAACG,MAAN,CAAP;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAEQhB,KAAK,CAACqB,GAAN,CAAUR,IAAI,iBAAI,QAAC,IAAD;AAEd,QAAA,IAAI,EAAEA,IAFQ;AAGd,QAAA,gBAAgB,EAAEM;AAHJ,SACTN,IAAI,CAACG,MADI;AAAA;AAAA;AAAA;AAAA,cAAlB;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEd;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA7DD;;GAAMH,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { addToDb, getDb } from '../../localstorage/localstorage';\r\nimport Meal from '../Meal/Meal';\r\nimport OrderList from '../OrderList/OrderList';\r\nimport './Restaurant.css';\r\n\r\nconst Restaurant = () => {\r\n    const [meals, setMeals] = useState([]);\r\n    const [order, setOrder] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=fish')\r\n            .then(res => res.json())\r\n            .then(data => setMeals(data.meals));\r\n    }, []);\r\n    /* \r\n        The above api link or the below method will now work for search. \r\n        if you want to implement search in this code. \r\n        1. add a input field \r\n        2. declare a state to keep search field text\r\n        3. Make meal loading api to dependant on search text\r\n        4. change the meal loading api.you will get the right api link on their website.\r\n        5. make the meal loading api dynamic using template string. \r\n        6. Also, the useEffect below will not work. Because, search result might not include the meals previously added to the cart\r\n        7. in that case, for each mealId, you have to load the meal from the api (you will find a new pai to load meal by Id) and then add them to the order state.\r\n        ---------------  \r\n        Read carefully, give it a try. [ Ki ache jibone]\r\n        if  you need help, let us know in the support session\r\n    */\r\n    useEffect(() => {\r\n        if (meals.length) {\r\n            const savedDb = getDb();\r\n            const savedOrder = [];\r\n            for (const mealId in savedDb) {\r\n                const meal = meals.find(ml => ml.idMeal === mealId)\r\n                const quantity = savedDb[mealId];\r\n                meal.quantity = quantity;\r\n                savedOrder.push(meal);\r\n            }\r\n            setOrder(savedOrder);\r\n        }\r\n    }, [meals])\r\n\r\n    const handleAddToOrder = meal => {\r\n        meal.quantity = 1;\r\n        const newOrder = [...order, meal];\r\n        setOrder(newOrder);\r\n        addToDb(meal.idMeal);\r\n    }\r\n\r\n    return (\r\n        <div className=\"restaurant-menu\">\r\n            <div className=\"meals-container\">\r\n                {\r\n                    meals.map(meal => <Meal\r\n                        key={meal.idMeal}\r\n                        meal={meal}\r\n                        handleAddToOrder={handleAddToOrder}\r\n                    ></Meal>)\r\n                }\r\n            </div>\r\n            <div className=\"order-list\">\r\n                <OrderList order={order}></OrderList>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}